services:
  # --- Service Base de Donn√©es ---
  database:
    image: mysql:8.0
    container_name: remoteflow_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # --- Service Application Laravel ---
  app:
    image: elelya/remoteflow-app:latest
    build:
       context: ..
       dockerfile: Dockerfile
    container_name: remoteflow_app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}

    networks:
      - backend_net
    restart: unless-stopped

  # --- Service Reverse Proxy ---
  proxy:
    image: nginx:alpine
    container_name: remoteflow_proxy
    ports:
      - "${PROXY_PORT}:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - frontend_net
      - backend_net
    depends_on:
      - app
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: remoteflow_adminer
    ports:
      - "8081:8080"
    networks:
      - backend_net
    depends_on:
      - database
    restart: unless-stopped
    profiles:
      - dev

  portainer:
    image: portainer/portainer-ce:latest
    container_name: remoteflow_portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  frontend_net:
    driver: bridge
  backend_net:
    driver: bridge

volumes:
  db_data:
  app_data:
  portainer_data:
